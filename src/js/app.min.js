var app={infos:{user_name:"",uuid:"",regis:!1,users:[]},activities:null,ip:window.location.origin,callback:null,socket:null,init:function(s){this.get_activities(),this.callback=s,this.init_socket()},get_activities:function(){$.getJSON("activities.json",function(s){app.activities=s})},check_server:function(){},init_socket:function(){app.infos.uuid=(new Date).getTime(),app.socket_callback=function(s){console.log(s)},app.socket=io(this.ip,{transports:["websocket","xhr-polling"]}),app.socket.on("error",function(s){app.callback({status:"error_socket",datas:s})}),app.socket.on("connect_failed",function(s){app.callback({status:"connect_failed"})}),app.socket.on("connect",function(s){app.callback({status:"socket_connected"})}),app.socket.on("njoy",function(s){switch(s.status){case"activities":app.infos.activities=s.activities}app.socket_callback(s)}),app.socket.on("njoy_"+app.infos.uuid,function(s){switch(s.status){case"animations":break;case"login_success":app.infos.users=s.datas.users,"undefined"!==_.where(app.infos.users,{uuid:app.infos.uuid})[0].regis&&"true"===_.where(app.infos.users,{uuid:app.infos.uuid})[0].regis&&(app.infos.regis=!0);break;case"login_error":app.infos.users=s.datas.users}"undefined"!=typeof s.datas.animations&&(animations=s.datas.animations),app.socket_callback(s)}),app.socket.emit("njoy",{status:"new"}),app.socket.on("chat_message",function(s){$("#messages").append($("<li>").text(JSON.stringify(s)))}),window.onbeforeunload=function(s){app.socket.emit("njoy",{status:"disconnect",user_name:app.infos.user_name,uuid:app.infos.uuid})}},destroy:function(){}};